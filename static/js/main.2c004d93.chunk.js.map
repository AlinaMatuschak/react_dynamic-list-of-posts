{"version":3,"sources":["api/api.js","components/Post/Post.jsx","props/PostsListProps.js","props/PostProps.js","components/PostsList/PostsList.jsx","components/Comment/Comment.jsx","props/PostDetailsProps.js","props/CommentsProps.js","props/CommentProps.js","components/Comments/Comments.jsx","components/NewCommentForm/NewCommentForm.jsx","props/NewCommentFormProps.js","components/PostDetails/PostDetails.jsx","App.jsx","index.js"],"names":["BASE_URL","getAllPosts","a","fetch","response","json","result","data","getUserPosts","userId","posts","filter","post","getPostDetails","postId","getPostComments","comments","comment","postComment","body","method","headers","JSON","stringify","Post","PropTypes","number","isRequired","func","string","id","title","setPostId","type","className","onClick","NaN","PostsList","useState","setPosts","useEffect","postsFromServer","Error","fetchData","map","key","Comment","arrayOf","shape","removeComment","Comments","isVisibleComments","setIsVisibleComments","commentsLength","length","isVisible","NewCommentForm","addComment","defaultComment","name","email","commentProperties","setCommentProperties","onChange","target","value","properties","onSubmit","event","preventDefault","placeholder","PostDetails","setPost","setComments","postIdForUpdete","postData","console","warn","commentsData","newComment","currentComments","updetePostDetails","updeteComments","commentId","deletePostComment","err","App","setUserId","selectedPostId","setSelectedPostId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2c004d93.chunk.js","sourcesContent":["export const BASE_URL = 'https://mate-api.herokuapp.com';\n\nexport async function getAllPosts() {\n  const response = await fetch(`${BASE_URL}/posts`);\n\n  const result = await response.json();\n\n  return result.data;\n}\n\nexport async function getUserPosts(userId) {\n  const posts = await getAllPosts();\n\n  return posts.filter(post => post.userId === userId);\n}\n\nexport async function getPostDetails(postId) {\n  const response = await fetch(`${BASE_URL}/posts/${postId}`);\n\n  const post = await response.json();\n\n  return post.data;\n}\n\nexport async function getPostComments(postId) {\n  const response = await fetch(`${BASE_URL}/comments`);\n\n  const comments = await response.json();\n\n  return comments\n    .data\n    .filter(comment => comment.postId === postId);\n}\n\nexport function deletePostComment(commentId) {\n  return fetch(`${BASE_URL}/comments/${commentId}`, {\n    method: 'DELETE',\n  });\n}\n\nexport async function postComment(body) {\n  const response = await fetch(`${BASE_URL}/comments`, {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json; charset=UTF-8',\n    },\n    body: JSON.stringify(body),\n  });\n\n  const comment = await response.json();\n\n  return comment.data;\n}\n","import React from 'react';\nimport { ProstProps } from '../../props/PostProps';\n\nexport const Post = ({ id, userId, title, postId, setPostId }) => (\n  <>\n    <div>\n      <b>{`[User #${userId}]: `}</b>\n      {title}\n    </div>\n    <button\n      type=\"button\"\n      className=\"PostsList__button button\"\n      onClick={() => {\n        postId === id\n          ? setPostId(NaN)\n          : setPostId(id);\n      }}\n    >\n      {postId === id ? 'Close' : 'Open'}\n    </button>\n  </>\n);\n\nPost.propTypes = ProstProps;\n","import PropTypes from 'prop-types';\n\nexport const ProstsListProps = {\n  userId: PropTypes.number.isRequired,\n  postId: PropTypes.number.isRequired,\n  setPostId: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\n\nexport const ProstProps = {\n  id: PropTypes.number.isRequired,\n  userId: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  postId: PropTypes.number.isRequired,\n  setPostId: PropTypes.func.isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport { getAllPosts, getUserPosts } from '../../api/api';\nimport { ProstsListProps } from '../../props/PostsListProps';\nimport { Post } from '../Post/Post';\nimport './PostsList.scss';\n\nexport const PostsList = ({ userId, postId, setPostId }) => {\n  const [posts, setPosts] = useState(null);\n\n  useEffect(\n    () => {\n      const fetchData = async() => {\n        const postsFromServer = userId\n          ? await getUserPosts(userId)\n          : await getAllPosts();\n\n        if (!postsFromServer) {\n          throw new Error('Cannot load posts');\n        }\n\n        setPosts(postsFromServer);\n      };\n\n      fetchData();\n    },\n    [userId],\n  );\n\n  return (\n    <div className=\"PostsList\">\n      <h2>Posts:</h2>\n\n      <ul className=\"PostsList__list\">\n        {posts\n          ? posts.map(post => (\n            <li\n              className=\"PostsList__item\"\n              key={post.id}\n            >\n              <Post\n                id={post.id}\n                userId={post.userId}\n                title={post.title}\n                postId={postId}\n                setPostId={setPostId}\n              />\n            </li>\n          ))\n          : <p>No posts</p>\n        }\n      </ul>\n    </div>\n  );\n};\n\nPostsList.propTypes = ProstsListProps;\n","import React from 'react';\nimport { CommentProps } from '../../props/CommentProps';\n\nexport const Comment = ({ body, id, removeComment }) => (\n  <>\n    <button\n      type=\"button\"\n      className=\"PostDetails__remove-button button\"\n      onClick={() => {\n        removeComment(id);\n      }}\n    >\n      X\n    </button>\n    <p>{body}</p>\n  </>\n);\n\nComment.propTypes = CommentProps;\n","import PropTypes from 'prop-types';\n\nexport const PostDetailsProps = {\n  postId: PropTypes.number.isRequired,\n};\n","import PropTypes from 'prop-types';\n\nexport const CommentsProps = {\n  comments: PropTypes.arrayOf(\n    PropTypes.shape({\n      body: PropTypes.string.isRequired,\n      id: PropTypes.number.isRequired,\n    }).isRequired,\n  ).isRequired,\n  removeComment: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\n\nexport const CommentProps = {\n  body: PropTypes.string.isRequired,\n  id: PropTypes.number.isRequired,\n  removeComment: PropTypes.func.isRequired,\n};\n","import React, { useState } from 'react';\nimport { CommentsProps } from '../../props/CommentsProps';\nimport { Comment } from '../Comment';\n\nexport const Comments = ({ comments, removeComment }) => {\n  const [isVisibleComments, setIsVisibleComments] = useState(true);\n  const commentsLength = comments.length;\n\n  return !commentsLength\n    ? <p>No comments</p>\n    : (\n      <section className=\"PostDetails__comments\">\n        <button\n          type=\"button\"\n          className=\"button\"\n          onClick={() => {\n            setIsVisibleComments(isVisible => !isVisible);\n          }}\n        >\n          {\n            isVisibleComments\n              ? `Hide ${commentsLength} comments`\n              : `Show ${commentsLength} comments`\n          }\n        </button>\n\n        {isVisibleComments && (\n          <ul className=\"PostDetails__list\">\n            {comments.map(({ body, id }) => (\n              <li className=\"PostDetails__list-item\" key={id}>\n                <Comment\n                  body={body}\n                  id={id}\n                  removeComment={removeComment}\n                />\n              </li>\n            ))}\n          </ul>\n        )}\n      </section>\n    );\n};\n\nComments.propTypes = CommentsProps;\n","import React, { useState } from 'react';\nimport { NewCommentFormProps } from '../../props/NewCommentFormProps';\nimport './NewCommentForm.scss';\n\nexport const NewCommentForm = ({ addComment }) => {\n  const defaultComment = {\n    name: '',\n    email: '',\n    body: '',\n  };\n\n  const [commentProperties, setCommentProperties] = useState(defaultComment);\n\n  function onChange({ target }) {\n    const { name, value } = target;\n\n    setCommentProperties(properties => ({\n      ...properties,\n      [name]: value,\n    }));\n  }\n\n  function onSubmit(event) {\n    event.preventDefault();\n\n    addComment(commentProperties);\n\n    setCommentProperties(defaultComment);\n  }\n\n  return (\n    <form\n      className=\"NewCommentForm\"\n      method=\"POST\"\n      onSubmit={onSubmit}\n    >\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Your name\"\n          className=\"NewCommentForm__input\"\n          value={commentProperties.name}\n          onChange={onChange}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"email\"\n          placeholder=\"Your email\"\n          className=\"NewCommentForm__input\"\n          value={commentProperties.email}\n          onChange={onChange}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <textarea\n          name=\"body\"\n          placeholder=\"Type comment here\"\n          className=\"NewCommentForm__input\"\n          value={commentProperties.body}\n          onChange={onChange}\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"NewCommentForm__submit-button button\"\n      >\n        Add a comment\n      </button>\n    </form>\n  );\n};\n\nNewCommentForm.propTypes = NewCommentFormProps;\n","import PropTypes from 'prop-types';\n\nexport const NewCommentFormProps = {\n  addComment: PropTypes.func.isRequired,\n};\n","/* eslint-disable no-console */\nimport React, { useEffect, useState } from 'react';\nimport {\n  getPostComments,\n  getPostDetails,\n  deletePostComment,\n  postComment,\n} from '../../api/api';\nimport { PostDetailsProps } from '../../props/PostDetailsProps';\nimport { Comments } from '../Comments';\nimport { NewCommentForm } from '../NewCommentForm';\nimport './PostDetails.scss';\n\nexport const PostDetails = ({ postId }) => {\n  const [post, setPost] = useState({ body: '' });\n  const [comments, setComments] = useState(null);\n\n  useEffect(\n    () => {\n      updetePostDetails(postId);\n      updeteComments(postId);\n    },\n    [postId],\n  );\n\n  async function updetePostDetails(postIdForUpdete) {\n    try {\n      const postData = await getPostDetails(postIdForUpdete);\n\n      setPost(postData);\n    } catch (err) {\n      console.warn(err);\n    }\n  }\n\n  async function updeteComments(postIdForUpdete) {\n    try {\n      const commentsData = await getPostComments(postIdForUpdete);\n\n      setComments(commentsData);\n    } catch (err) {\n      console.warn(err);\n    }\n  }\n\n  function removeComment(commentId) {\n    try {\n      deletePostComment(commentId);\n\n      setComments(comments.filter(comment => comment.id !== commentId));\n    } catch (err) {\n      console.warn(err);\n    }\n  }\n\n  async function addComment(comment) {\n    try {\n      const newComment = await postComment({\n        postId: post.id,\n        ...comment,\n      });\n\n      setComments(currentComments => [...currentComments, newComment]);\n    } catch (err) {\n      console.warn(err);\n    }\n  }\n\n  return (\n    <div className=\"PostDetails\">\n      <h2>Post details:</h2>\n\n      <section className=\"PostDetails__post\">\n        <p>{post.body}</p>\n      </section>\n\n      {comments && (\n        <Comments\n          comments={comments}\n          removeComment={removeComment}\n        />\n      )}\n\n      <section>\n        <div className=\"PostDetails__form-wrapper\">\n          <NewCommentForm addComment={addComment} />\n        </div>\n      </section>\n    </div>\n  );\n};\n\nPostDetails.propTypes = PostDetailsProps;\n","import React, { useState } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\n\nconst App = () => {\n  const [userId, setUserId] = useState(0);\n  const [selectedPostId, setSelectedPostId] = useState(NaN);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <label>\n          Select a user: &nbsp;\n\n          <select\n            className=\"App__user-selector\"\n            value={userId}\n            onChange={({ target }) => {\n              setUserId(+target.value);\n            }}\n          >\n            <option value=\"0\">All users</option>\n            <option value=\"1\">Leanne Graham</option>\n            <option value=\"2\">Ervin Howell</option>\n            <option value=\"3\">Clementine Bauch</option>\n            <option value=\"4\">Patricia Lebsack</option>\n            <option value=\"5\">Chelsey Dietrich</option>\n            <option value=\"6\">Mrs. Dennis Schulist</option>\n            <option value=\"7\">Kurtis Weissnat</option>\n            <option value=\"8\">Nicholas Runolfsdottir V</option>\n            <option value=\"9\">Glenna Reichert</option>\n            <option value=\"10\">Leanne Graham</option>\n          </select>\n        </label>\n      </header>\n\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          <PostsList\n            userId={userId}\n            postId={selectedPostId}\n            setPostId={setSelectedPostId}\n          />\n        </div>\n\n        {selectedPostId && (\n          <div className=\"App__content\">\n            <PostDetails postId={selectedPostId} />\n          </div>\n        )}\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}